# nginx.conf for Django + RTMP Streaming

# user root;
# daemon off;
worker_processes 1;


pid /var/run/nginx.pid;

error_log /dev/stdout info;

events {
    worker_connections 1024;
}

# RTMP configuration block
# rtmp {
#     server {
#         listen 1935;
#         chunk_size 4096;
#
#         application stream {
#             live on;
#
#             exec ffmpeg -i rtmp://localhost:1935/stream/$name
#               -c:a aac -b:a 128k -c:v libx264 -b:v 2500k -f flv -g 30 -r 30 -s 1280x720 -preset superfast -profile:v baseline rtmp://localhost:1935/hls/$name_720p
#               -c:a aac -b:a 128k -c:v libx264 -b:v 1000k -f flv -g 30 -r 30 -s 854x480 -preset superfast -profile:v baseline rtmp://localhost:1935/hls/$name_480p
#               -c:a aac -b:a 128k -c:v libx264 -b:v 500k  -f flv -g 30 -r 30 -s 640x360 -preset superfast -profile:v baseline rtmp://localhost:1935/hls/$name_360p;
#         }
#         application hls {
#             live on;
#             hls on;
#             hls_fragment_naming system;
#             hls_fragment 5;
#             hls_playlist_length 10;
#             hls_path /opt/data/hls;
#             hls_nested on;
#
#             hls_variant _720p BANDWIDTH=2500000,RESOLUTION=1280x720;
#             hls_variant _480p BANDWIDTH=1000000,RESOLUTION=854x480;
#             hls_variant _360p BANDWIDTH=500000,RESOLUTION=640x360;
#         }
#     }
# }

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

#     access_log /var/log/nginx/access.log main;
#     error_log /var/log/nginx/error.log;

    access_log /dev/stdout combined;


    sendfile on;
    keepalive_timeout 65;
    client_max_body_size 2048M;

    gzip on;
    gzip_types text/plain text/css application/json application/javascript;

    # SSL config
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256';
    ssl_stapling off;
    ssl_stapling_verify off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1d;
    ssl_session_tickets off;

    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header Content-Security-Policy "upgrade-insecure-requests";

    # RTMP/HLS server
#     server {
#         listen 80;
#         server_name hls.digilivenetworks.com localhost;
#
#         location /hls {
#             types {
#                 application/vnd.apple.mpegurl m3u8;
#                 video/mp2t ts;
#             }
#             root /opt/data;
#             add_header Cache-Control no-cache;
#             add_header Access-Control-Allow-Origin *;
#             add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
#             add_header Access-Control-Allow-Headers '*';
#         }

#         location / {
#             return 200 "NGINX RTMP is running\n";
#         }
#     }

    # Main HTTPS Django backend
    server {
        listen 443 ssl;
        listen [::]:443 ssl;
        server_name api.digilivenetworks.com;

        ssl_certificate     /home/digitallive/cert/cert.crt;
        ssl_certificate_key /home/digitallive/cert/private.key;

        location / {
            proxy_pass https://gunicorn:8000;  # Gunicorn app
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;

            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept';
        }

        location /static/ {
            alias /home/backend/staticfiles/;
            expires 7d;
        }

        location /media/ {
            alias /home/backend/media/;
        }
    }

#     WebSocket (Django Channels with Daphne)
    server {
        listen 443 ssl;
        listen [::]:443 ssl;
        server_name socket.digilivenetworks.com;

        ssl_certificate     /home/digitallive/cert/cert.crt;
        ssl_certificate_key /home/digitallive/cert/private.key;

        location / {
            proxy_pass https://daphne:8001;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }

    # Redirect all HTTP to HTTPS
#     server {
#         listen 80;
#         listen [::]:80;
#         server_name api.digilivenetworks.com socket.digilivenetworks.com;
#
#         return 301 https://$host$request_uri;
#     }
}
